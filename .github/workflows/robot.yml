name: Robot Framework Tests (Chrome)
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip

      - name: Install Google Chrome
        run: |
          echo "Instalando Google Chrome..."
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          echo "Versão do Chrome: $(google-chrome --version)"

      - name: Install ChromeDriver
        run: |
          echo "Obtendo versão do Chrome..."
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          echo "Versão do Chrome: $CHROME_VERSION"
          
          echo "Baixando ChromeDriver correspondente..."
          CHROME_MAJOR_VERSION=${CHROME_VERSION%%.*}
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_MAJOR_VERSION")
          echo "Versão do ChromeDriver: $CHROMEDRIVER_VERSION"
          
          wget -q "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
          unzip -o chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          rm chromedriver_linux64.zip
          
          echo "Verificando instalação..."
          chromedriver --version

      - name: Install Python dependencies
        run: |
          pip install robotframework selenium>=4.10.0 robotframework-seleniumlibrary

      - name: Run Robot Tests
        run: |
          robot --variable BROWSER:Chrome --outputdir results/ tests/

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: robot-reports
          path: results/

      - name: Generate and Upload Report
        run: |
          # Instala as dependências para o relatório
          pip install robotframework-robocop robotframework-tidy
          
          # Gera relatório completo
          robot --report report.html --log log.html --output output.xml --outputdir results/ tests/
          
          # Configura o git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Faz commit e push do relatório
          git clone https://github.com/BeatrizFFranco/quality-hunters-academy13-api-robot.git
          cd quality-hunters-academy13-api-robot
          git checkout main
          cp ../results/report.html .github/workflows/
          cp ../results/log.html .github/workflows/
          cp ../results/output.xml .github/workflows/
          git add .github/workflows/report.html .github/workflows/log.html .github/workflows/output.xml
          git commit -m "Atualiza relatórios de teste [skip ci]"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/BeatrizFFranco/quality-hunters-academy13-api-robot.git main